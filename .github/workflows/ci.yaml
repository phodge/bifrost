on:
  push:
    branches:
      - master
  pull_request:
    # run on all pull requests

jobs:
    verify_requirements_exported:
        name: "Ensure requirements.txt has been exported"
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Setup python
              uses: actions/setup-python@v2
              with:
                python-version: 3.8
            - run: sudo python3 -m pip install poetry
            - run: tests/bin/ensure_requirements_txt_exported

    linting:
        name: "Linters / Static Checkers"
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Setup python
              uses: actions/setup-python@v2
              with:
                python-version: 3.8
            - run: pip install -r requirements_dev.txt
            - run: mypy .
            - run: flake8 bifrostrpc tests
            - run: pylint bifrostrpc

    unit_tests:
      name: "Pytest"
      runs-on: ubuntu-latest
      strategy:
        matrix:
            python-version:
                - 3.8
                - 3.9
                - "3.10"
                - "3.11"
      steps:
        - uses: actions/checkout@v2
        - name: Setup python
          uses: actions/setup-python@v2
          with:
            python-version: ${{matrix.python-version}}
        - name: Install node18
          uses: actions/setup-node@v3
          with:
            node-version: 18
        - run: python -m pip install -r requirements_dev.txt
        - run: python -m pip install .
        - run: py.test

    create-new-git-tag:
        runs-on: ubuntu-latest
        container: vertigo1/magicpr-demo:2022.0
        # we only want this to run on the default branch, although GH doesn't
        # give us a way to get its name automatically here
        if: ${{ github.ref == 'refs/heads/master' }}
        steps:
            - uses: actions/checkout@v2
            - name: read current version from pyproject.toml
              run: current_version=$(magicpr read-toml pyproject.toml .tool .poetry .version)

            # create a tag for this project version if it doesn't already exist
            - name: ensure tag exists
              run: magicpr ensure-tag-exists "$current_version" --default-branch=master
