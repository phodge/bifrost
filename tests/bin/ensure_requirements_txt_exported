#!/usr/bin/env bash
set -e

cd "$(dirname "$(dirname "$(dirname "$0")")")"

errmsg() {
    echo -e "\e[01;31m$@\e[0m" >&2
}

success() {
    echo -e "\e[00;32m$@\e[0m" >&2
}

instruct() {
    echo -e "\e[00;33m$@\e[0m" >&2
}

working() {
    echo -e "\e[02;36m$@\e[0m" >&2
}

fatal() {
    errmsg "FATAL: $@"
    exit 1
}

getcmd() {
    # TODO: We need to export *without* hashes because pip won't install the -e paradox-codegen
    # package from github if it has a hash
    echo -n "poetry export --without-hashes -f requirements.txt"

    if [ "x$1" = "x-d" ]; then
        shift
        local root="$1"
        echo " --with dev -o ${root}requirements_dev.txt"
    else
        local root="$1"
        echo " -o ${root}requirements.txt"
    fi

}

if ! [ -f requirements.txt ]; then
    errmsg "ERROR: requirements.txt does not exist"
    instruct "Please run the following command:"
    instruct "    $(getcmd)"
    exit 1
fi

if ! [ -f requirements_dev.txt ]; then
    errmsg "ERROR: requirements_dev.txt does not exist"
    instruct "Please run the following command:"
    instruct "    $(getcmd -d)"
    exit 1
fi

# ensure poetry is available
which poetry >/dev/null || fatal "'poetry' command is not available"

working "Creating temporary directory" 
tmpdir=$(mktemp -d)

working "Exporting $tmpdir/requirements.txt using poetry"
$(getcmd "$tmpdir/") || fatal could not export requirements.txt
working "Exporting $tmpdir/requirements_dev.txt using poetry"
$(getcmd -d "$tmpdir/") || fatal could not export requirements_dev.txt

if ! diff requirements.txt "$tmpdir/requirements.txt"; then
    errmsg "ERROR: requirements.txt generated by poetry is different to the version in this repo"
    instruct "Please run the following command:"
    instruct "    $(getcmd)"
    exit 1
fi

if ! diff requirements_dev.txt "$tmpdir/requirements_dev.txt"; then
    errmsg "ERROR: requirements_dev.txt generated by poetry is different to the version in this repo"
    instruct "Please run the following command:"
    instruct "    $(getcmd -d)"
    exit 1
fi

working "Cleaning up $tmpdir"
rm -rf "$tmpdir"

success "requirements.txt and requirements_dev.txt are up to date"
